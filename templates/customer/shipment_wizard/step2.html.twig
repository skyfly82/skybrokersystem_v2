{% extends 'customer/shipment_wizard/base.html.twig' %}

{% block wizard_content %}
<div class="fade-in" x-data="step2Data()">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Sender Address -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center justify-between mb-4">
                <h2 class="text-xl font-semibold text-gray-900">
                    <i class="fas fa-user mr-2 text-blue-600"></i>Sender Information
                </h2>
                <button type="button"
                        @click="showSenderAddressBook = true"
                        class="text-sm text-blue-600 hover:text-blue-800">
                    <i class="fas fa-address-book mr-1"></i>Choose from Address Book
                </button>
            </div>

            <div class="space-y-4">
                <div class="form-group">
                    <label class="form-label">Full Name *</label>
                    <input type="text"
                           x-model="sender.name"
                           @input="validateField('sender.name', $event.target.value)"
                           class="form-input"
                           placeholder="John Doe">
                    <div x-show="errors['sender.name']" class="form-error" x-text="errors['sender.name']"></div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="form-group">
                        <label class="form-label">Email *</label>
                        <input type="email"
                               x-model="sender.email"
                               @input="validateField('sender.email', $event.target.value)"
                               class="form-input"
                               placeholder="john@example.com">
                        <div x-show="errors['sender.email']" class="form-error" x-text="errors['sender.email']"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Phone *</label>
                        <input type="tel"
                               x-model="sender.phone"
                               @input="validateField('sender.phone', $event.target.value)"
                               class="form-input"
                               placeholder="+48 123 456 789">
                        <div x-show="errors['sender.phone']" class="form-error" x-text="errors['sender.phone']"></div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">Address *</label>
                    <input type="text"
                           x-model="sender.address"
                           @input="validateField('sender.address', $event.target.value); getSuggestions('sender', $event.target.value)"
                           @focus="showSenderSuggestions = true"
                           class="form-input"
                           placeholder="ul. PrzykÅ‚adowa 123">
                    <div x-show="errors['sender.address']" class="form-error" x-text="errors['sender.address']"></div>

                    <!-- Address Suggestions -->
                    <div x-show="showSenderSuggestions && senderSuggestions.length > 0"
                         class="absolute z-10 w-full bg-white border border-gray-300 rounded-md shadow-lg mt-1">
                        <template x-for="suggestion in senderSuggestions" :key="suggestion.id">
                            <div class="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                                 @click="selectSuggestion('sender', suggestion)">
                                <div class="font-medium" x-text="suggestion.street"></div>
                                <div class="text-sm text-gray-600" x-text="`${suggestion.city}, ${suggestion.postal_code}`"></div>
                            </div>
                        </template>
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="form-group">
                        <label class="form-label">Postal Code *</label>
                        <input type="text"
                               x-model="sender.postal_code"
                               @input="validateField('sender.postal_code', $event.target.value)"
                               class="form-input"
                               placeholder="00-000"
                               pattern="[0-9]{2}-[0-9]{3}">
                        <div x-show="errors['sender.postal_code']" class="form-error" x-text="errors['sender.postal_code']"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">City *</label>
                        <input type="text"
                               x-model="sender.city"
                               @input="validateField('sender.city', $event.target.value)"
                               class="form-input"
                               placeholder="Warsaw">
                        <div x-show="errors['sender.city']" class="form-error" x-text="errors['sender.city']"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Country *</label>
                        <select x-model="sender.country"
                                @change="validateField('sender.country', $event.target.value)"
                                class="form-input">
                            <option value="Poland">Poland</option>
                            <option value="Germany">Germany</option>
                            <option value="Czech Republic">Czech Republic</option>
                            <option value="Slovakia">Slovakia</option>
                            <option value="Austria">Austria</option>
                        </select>
                        <div x-show="errors['sender.country']" class="form-error" x-text="errors['sender.country']"></div>
                    </div>
                </div>

                <div class="flex items-center space-x-2">
                    <input type="checkbox"
                           x-model="saveSenderToAddressBook"
                           id="save-sender"
                           class="rounded">
                    <label for="save-sender" class="text-sm text-gray-600">
                        Save this address to my address book
                    </label>
                </div>
            </div>
        </div>

        <!-- Recipient Address -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center justify-between mb-4">
                <h2 class="text-xl font-semibold text-gray-900">
                    <i class="fas fa-map-marker-alt mr-2 text-blue-600"></i>Recipient Information
                </h2>
                <button type="button"
                        @click="showRecipientAddressBook = true"
                        class="text-sm text-blue-600 hover:text-blue-800">
                    <i class="fas fa-address-book mr-1"></i>Choose from Address Book
                </button>
            </div>

            <div class="space-y-4">
                <div class="form-group">
                    <label class="form-label">Full Name *</label>
                    <input type="text"
                           x-model="recipient.name"
                           @input="validateField('recipient.name', $event.target.value)"
                           class="form-input"
                           placeholder="Jane Smith">
                    <div x-show="errors['recipient.name']" class="form-error" x-text="errors['recipient.name']"></div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="form-group">
                        <label class="form-label">Email *</label>
                        <input type="email"
                               x-model="recipient.email"
                               @input="validateField('recipient.email', $event.target.value)"
                               class="form-input"
                               placeholder="jane@example.com">
                        <div x-show="errors['recipient.email']" class="form-error" x-text="errors['recipient.email']"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Phone *</label>
                        <input type="tel"
                               x-model="recipient.phone"
                               @input="validateField('recipient.phone', $event.target.value)"
                               class="form-input"
                               placeholder="+48 987 654 321">
                        <div x-show="errors['recipient.phone']" class="form-error" x-text="errors['recipient.phone']"></div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">Address *</label>
                    <input type="text"
                           x-model="recipient.address"
                           @input="validateField('recipient.address', $event.target.value); getSuggestions('recipient', $event.target.value)"
                           @focus="showRecipientSuggestions = true"
                           class="form-input"
                           placeholder="ul. Testowa 456">
                    <div x-show="errors['recipient.address']" class="form-error" x-text="errors['recipient.address']"></div>

                    <!-- Address Suggestions -->
                    <div x-show="showRecipientSuggestions && recipientSuggestions.length > 0"
                         class="absolute z-10 w-full bg-white border border-gray-300 rounded-md shadow-lg mt-1">
                        <template x-for="suggestion in recipientSuggestions" :key="suggestion.id">
                            <div class="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                                 @click="selectSuggestion('recipient', suggestion)">
                                <div class="font-medium" x-text="suggestion.street"></div>
                                <div class="text-sm text-gray-600" x-text="`${suggestion.city}, ${suggestion.postal_code}`"></div>
                            </div>
                        </template>
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="form-group">
                        <label class="form-label">Postal Code *</label>
                        <input type="text"
                               x-model="recipient.postal_code"
                               @input="validateField('recipient.postal_code', $event.target.value)"
                               class="form-input"
                               placeholder="00-000"
                               pattern="[0-9]{2}-[0-9]{3}">
                        <div x-show="errors['recipient.postal_code']" class="form-error" x-text="errors['recipient.postal_code']"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">City *</label>
                        <input type="text"
                               x-model="recipient.city"
                               @input="validateField('recipient.city', $event.target.value)"
                               class="form-input"
                               placeholder="Krakow">
                        <div x-show="errors['recipient.city']" class="form-error" x-text="errors['recipient.city']"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Country *</label>
                        <select x-model="recipient.country"
                                @change="validateField('recipient.country', $event.target.value)"
                                class="form-input">
                            <option value="Poland">Poland</option>
                            <option value="Germany">Germany</option>
                            <option value="Czech Republic">Czech Republic</option>
                            <option value="Slovakia">Slovakia</option>
                            <option value="Austria">Austria</option>
                        </select>
                        <div x-show="errors['recipient.country']" class="form-error" x-text="errors['recipient.country']"></div>
                    </div>
                </div>

                <div class="flex items-center space-x-2">
                    <input type="checkbox"
                           x-model="saveRecipientToAddressBook"
                           id="save-recipient"
                           class="rounded">
                    <label for="save-recipient" class="text-sm text-gray-600">
                        Save this address to my address book
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- Address Validation -->
    <div class="mt-8 bg-white rounded-lg shadow-md p-6" x-show="validationResults">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">
            <i class="fas fa-check-circle mr-2 text-green-600"></i>Address Validation
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div x-show="validationResults?.sender">
                <h4 class="font-medium text-gray-900 mb-2">Sender Address</h4>
                <div class="text-sm text-green-600" x-show="validationResults?.sender?.valid">
                    <i class="fas fa-check mr-1"></i>Address is valid
                </div>
                <div class="text-sm text-red-600" x-show="!validationResults?.sender?.valid">
                    <i class="fas fa-exclamation-triangle mr-1"></i>
                    <span x-text="validationResults?.sender?.message"></span>
                </div>
            </div>
            <div x-show="validationResults?.recipient">
                <h4 class="font-medium text-gray-900 mb-2">Recipient Address</h4>
                <div class="text-sm text-green-600" x-show="validationResults?.recipient?.valid">
                    <i class="fas fa-check mr-1"></i>Address is valid
                </div>
                <div class="text-sm text-red-600" x-show="!validationResults?.recipient?.valid">
                    <i class="fas fa-exclamation-triangle mr-1"></i>
                    <span x-text="validationResults?.recipient?.message"></span>
                </div>
            </div>
        </div>
    </div>

    <!-- Address Book Modal - Sender -->
    <div x-show="showSenderAddressBook"
         x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="opacity-0"
         x-transition:enter-end="opacity-100"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="opacity-100"
         x-transition:leave-end="opacity-0"
         class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-96 overflow-y-auto">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold">Choose Sender Address</h3>
                <button @click="showSenderAddressBook = false" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="space-y-3">
                {% for address in saved_addresses.data %}
                {% if address.type == 'sender' or address.type == 'both' %}
                <div class="border rounded-lg p-3 cursor-pointer hover:bg-gray-50"
                     @click="selectAddressFromBook('sender', {{ address|json_encode }})">
                    <div class="font-medium">{{ address.name }}</div>
                    <div class="text-sm text-gray-600">{{ address.address }}</div>
                    <div class="text-sm text-gray-600">{{ address.city }}, {{ address.postal_code }}</div>
                    <div class="text-xs text-gray-500">{{ address.email }} â€¢ {{ address.phone }}</div>
                </div>
                {% endif %}
                {% endfor %}
            </div>
        </div>
    </div>

    <!-- Address Book Modal - Recipient -->
    <div x-show="showRecipientAddressBook"
         x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="opacity-0"
         x-transition:enter-end="opacity-100"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="opacity-100"
         x-transition:leave-end="opacity-0"
         class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-96 overflow-y-auto">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold">Choose Recipient Address</h3>
                <button @click="showRecipientAddressBook = false" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="space-y-3">
                {% for address in saved_addresses.data %}
                {% if address.type == 'recipient' or address.type == 'both' %}
                <div class="border rounded-lg p-3 cursor-pointer hover:bg-gray-50"
                     @click="selectAddressFromBook('recipient', {{ address|json_encode }})">
                    <div class="font-medium">{{ address.name }}</div>
                    <div class="text-sm text-gray-600">{{ address.address }}</div>
                    <div class="text-sm text-gray-600">{{ address.city }}, {{ address.postal_code }}</div>
                    <div class="text-xs text-gray-500">{{ address.email }} â€¢ {{ address.phone }}</div>
                </div>
                {% endif %}
                {% endfor %}
            </div>
        </div>
    </div>
</div>

<script>
function step2Data() {
    return {
        sender: {
            name: '{{ wizard_data.step2.sender.name ?? "" }}',
            email: '{{ wizard_data.step2.sender.email ?? "" }}',
            phone: '{{ wizard_data.step2.sender.phone ?? "" }}',
            address: '{{ wizard_data.step2.sender.address ?? "" }}',
            postal_code: '{{ wizard_data.step2.sender.postal_code ?? "" }}',
            city: '{{ wizard_data.step2.sender.city ?? "" }}',
            country: '{{ wizard_data.step2.sender.country ?? "Poland" }}'
        },
        recipient: {
            name: '{{ wizard_data.step2.recipient.name ?? "" }}',
            email: '{{ wizard_data.step2.recipient.email ?? "" }}',
            phone: '{{ wizard_data.step2.recipient.phone ?? "" }}',
            address: '{{ wizard_data.step2.recipient.address ?? "" }}',
            postal_code: '{{ wizard_data.step2.recipient.postal_code ?? "" }}',
            city: '{{ wizard_data.step2.recipient.city ?? "" }}',
            country: '{{ wizard_data.step2.recipient.country ?? "Poland" }}'
        },
        saveSenderToAddressBook: false,
        saveRecipientToAddressBook: false,
        showSenderAddressBook: false,
        showRecipientAddressBook: false,
        showSenderSuggestions: false,
        showRecipientSuggestions: false,
        senderSuggestions: [],
        recipientSuggestions: [],
        validationResults: null,
        errors: {},

        async getSuggestions(type, query) {
            if (query.length < 3) {
                this[type + 'Suggestions'] = [];
                return;
            }

            try {
                const response = await fetch('{{ path("customer_shipment_wizard_address_suggest") }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        query: query,
                        country: this[type].country
                    })
                });

                const result = await response.json();
                if (result.success) {
                    this[type + 'Suggestions'] = result.suggestions;
                }
            } catch (error) {
                console.error('Failed to get address suggestions:', error);
            }
        },

        selectSuggestion(type, suggestion) {
            this[type].address = suggestion.street;
            this[type].city = suggestion.city;
            this[type].postal_code = suggestion.postal_code;
            this['show' + type.charAt(0).toUpperCase() + type.slice(1) + 'Suggestions'] = false;
        },

        selectAddressFromBook(type, address) {
            this[type] = {
                name: address.name,
                email: address.email,
                phone: address.phone,
                address: address.address,
                postal_code: address.postal_code,
                city: address.city,
                country: address.country
            };
            this['show' + type.charAt(0).toUpperCase() + type.slice(1) + 'AddressBook'] = false;
        },

        async validateAddresses() {
            try {
                const response = await fetch('{{ path("api_customer_addresses_validate") }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        sender: this.sender,
                        recipient: this.recipient
                    })
                });

                const result = await response.json();
                if (result.success) {
                    this.validationResults = result.data;
                }
            } catch (error) {
                console.error('Failed to validate addresses:', error);
            }
        },

        async saveAddressesToBook() {
            if (this.saveSenderToAddressBook) {
                await this.saveAddress('sender', this.sender);
            }
            if (this.saveRecipientToAddressBook) {
                await this.saveAddress('recipient', this.recipient);
            }
        },

        async saveAddress(type, addressData) {
            try {
                await fetch('{{ path("customer_shipment_wizard_save_address") }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        ...addressData,
                        type: type
                    })
                });
            } catch (error) {
                console.error('Failed to save address:', error);
            }
        },

        collectStepData() {
            return {
                sender: this.sender,
                recipient: this.recipient,
                save_sender_to_address_book: this.saveSenderToAddressBook,
                save_recipient_to_address_book: this.saveRecipientToAddressBook
            };
        },

        validateField(fieldName, value) {
            if (this.errors[fieldName] && value) {
                delete this.errors[fieldName];
            }
        },

        init() {
            // Validate addresses if both are filled
            this.$watch('sender', () => this.validateAddresses(), { deep: true });
            this.$watch('recipient', () => this.validateAddresses(), { deep: true });
        }
    }
}
</script>
{% endblock %}