# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    # InPost API Client
    App\Service\InPostApiClient:
        autowire: false
        arguments:
            - '@http_client'
            - '%env(INPOST_API_URL)%'
            - '%env(INPOST_TOKEN)%'
            - '%env(INPOST_ORGANIZATION_ID)%'

    # Security Services
    App\Security\SecurityLogger:
        arguments:
            - '@monolog.logger'
        tags:
            - { name: monolog.logger, channel: security }
    
    App\Security\InputValidator:
        arguments:
            - '@validator'
    
    App\Security\RateLimiter:
        arguments:
            - '@cache.app'
            - '@logger'
            - '@App\Security\SecurityLogger'
    
    App\Security\JWTManager:
        arguments:
            - '@lexik_jwt_authentication.jwt_manager'
            - '@doctrine.orm.entity_manager'
            - '@App\Security\SecurityLogger'
            - '@logger'

    # Secrets Management Services
    App\Service\SecretEncryptionService:
        arguments:
            $appSecret: '%env(APP_SECRET)%'
            $encryptionSalt: 'skybroker_secrets_v2'

    App\Service\SecretsManagerService:
        arguments:
            $secretRepository: '@App\Repository\SecretRepository'
            $auditLogRepository: '@App\Repository\SecretAuditLogRepository'
            $encryptionService: '@App\Service\SecretEncryptionService'
            $security: '@security.helper'
            $requestStack: '@request_stack'
            $logger: '@logger'
        tags:
            - { name: 'monolog.logger', channel: 'secrets' }

    # InPost Services
    App\Courier\InPost\Service\InPostService:
        arguments:
            $environment: 'sandbox'
        tags:
            - { name: 'courier.service', alias: 'inpost' }

    App\Courier\InPost\Service\InPostShipmentService:
        arguments:
            - '@App\Service\InPostApiClient'
            - '@App\Repository\ShipmentRepository'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'inpost' }

    # PayNow Payment Services
    App\Domain\Payment\Contracts\PayNowServiceInterface:
        alias: App\Domain\Payment\Service\PayNowService

    App\Domain\Payment\Service\PayNowService:
        arguments:
            $httpClient: '@http_client'
            $logger: '@monolog.logger'
            $environment: '%env(PAYNOW_ENVIRONMENT)%'
            $apiKey: '%env(PAYNOW_API_KEY)%'
            $signatureKey: '%env(PAYNOW_SIGNATURE_KEY)%'
            $enabled: '%env(bool:PAYNOW_ENABLED)%'
        tags:
            - { name: 'monolog.logger', channel: 'paynow' }
            - { name: 'payment.service', alias: 'paynow' }

    App\Domain\Payment\Service\PayNowPaymentHandler:
        arguments:
            - '@App\Domain\Payment\Contracts\PayNowServiceInterface'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
            - '@router'
        tags:
            - { name: 'monolog.logger', channel: 'paynow' }

    # Credit Payment Services
    App\Domain\Payment\Contracts\CreditServiceInterface:
        alias: App\Domain\Payment\Service\CreditService

    App\Domain\Payment\Service\CreditService:
        arguments:
            - '@App\Domain\Payment\Repository\CreditAccountRepository'
            - '@App\Domain\Payment\Repository\CreditTransactionRepository'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
            - '%env(bool:CREDIT_ENABLED)%'
        tags:
            - { name: 'monolog.logger', channel: 'credit' }
            - { name: 'payment.service', alias: 'credit' }

    App\Domain\Payment\Service\CreditPaymentHandler:
        arguments:
            - '@App\Domain\Payment\Contracts\CreditServiceInterface'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
            - '@router'
        tags:
            - { name: 'monolog.logger', channel: 'credit' }

    # Wallet Payment Services
    App\Domain\Payment\Contracts\WalletServiceInterface:
        alias: App\Domain\Payment\Service\WalletService

    App\Domain\Payment\Service\WalletService:
        arguments:
            - '@App\Domain\Payment\Repository\WalletRepository'
            - '@App\Domain\Payment\Repository\WalletTransactionRepository'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
            - '%env(bool:WALLET_ENABLED)%'
        tags:
            - { name: 'monolog.logger', channel: 'wallet' }
            - { name: 'payment.service', alias: 'wallet' }

    App\Domain\Payment\Service\WalletPaymentHandler:
        arguments:
            - '@App\Domain\Payment\Contracts\WalletServiceInterface'
            - '@App\Domain\Payment\Repository\PaymentRepository'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'wallet' }

    # Main Payment Handler (coordinates all payment methods)
    App\Domain\Payment\Service\PaymentHandler:
        arguments:
            - '@App\Domain\Payment\Service\PayNowPaymentHandler'
            - '@App\Domain\Payment\Service\CreditPaymentHandler'
            - '@App\Domain\Payment\Service\WalletPaymentHandler'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'payment' }

    # Pricing Calculator Services
    App\Domain\Pricing\Contracts\PricingCalculatorInterface:
        alias: App\Domain\Pricing\Service\PricingCalculatorService

    App\Domain\Pricing\Service\PricingCalculatorService:
        arguments:
            - '@App\Domain\Pricing\Repository\CarrierRepository'
            - '@App\Domain\Pricing\Repository\PricingTableRepository'
            - '@App\Domain\Pricing\Repository\PricingRuleRepository'
            - '@App\Domain\Pricing\Repository\AdditionalServiceRepository'
            - '@App\Domain\Pricing\Repository\AdditionalServicePriceRepository'
            - '@App\Domain\Pricing\Repository\CustomerPricingRepository'
            - '@App\Domain\Pricing\Repository\PromotionalPricingRepository'
            - '@App\Domain\Pricing\Service\CarrierRateService'
            - '@App\Domain\Pricing\Service\PricingRuleEngine'
            - '@validator'
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'pricing' }
            - { name: 'pricing.calculator', alias: 'main' }

    App\Domain\Pricing\Service\CarrierRateService:
        arguments:
            - '@App\Domain\Pricing\Repository\PricingTableRepository'
            - '@App\Domain\Pricing\Repository\PricingRuleRepository'
            - '@App\Domain\Pricing\Repository\AdditionalServicePriceRepository'
            - '@App\Domain\Pricing\Repository\PricingZoneRepository'
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'pricing' }

    App\Domain\Pricing\Service\PricingRuleEngine:
        arguments:
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'pricing' }

    # Geographical Zone Services
    App\Domain\Pricing\Service\GeographicalZoneService:
        arguments:
            - '@App\Domain\Pricing\Repository\PricingZoneRepository'
            - '@App\Domain\Pricing\Repository\CarrierRepository'
            - '@App\Domain\Pricing\Service\PostalCodeMapper'
            - '@App\Domain\Pricing\Service\CountryZoneMapper'
            - '@doctrine.orm.entity_manager'
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'pricing' }
            - { name: 'geographical.zone', alias: 'main' }

    App\Domain\Pricing\Service\PostalCodeMapper:
        arguments:
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'pricing' }

    App\Domain\Pricing\Service\CountryZoneMapper:
        arguments:
            - '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'pricing' }

    # Courier Service Registry
    App\Service\CourierServiceRegistry:
        arguments:
            $clients: !tagged_iterator { tag: 'courier.service' }

    # MEEST Courier Services
    App\Domain\Courier\Meest\ValueObject\MeestCredentials:
        arguments:
            $username: '%env(MEEST_USERNAME)%'
            $password: '%env(MEEST_PASSWORD)%'
            $baseUrl: '%env(MEEST_API_URL)%'

    App\Domain\Courier\Meest\Service\MeestApiClient:
        arguments:
            $httpClient: '@http_client'
            $logger: '@monolog.logger'
            $credentials: '@App\Domain\Courier\Meest\ValueObject\MeestCredentials'
            $cache: '@cache.app'
        tags:
            - { name: 'monolog.logger', channel: 'meest' }

    App\Domain\Courier\Meest\Service\MeestTrackingNumberGenerator:
        arguments:
            $repository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $logger: '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'meest' }

    App\Domain\Courier\Meest\Service\MeestLabelService:
        arguments:
            $apiClient: '@App\Domain\Courier\Meest\Service\MeestApiClient'
            $repository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $entityManager: '@doctrine.orm.entity_manager'
            $httpClient: '@http_client'
            $slugger: '@slugger'
            $logger: '@monolog.logger'
            $projectDir: '%kernel.project_dir%'
        tags:
            - { name: 'monolog.logger', channel: 'meest' }

    App\Domain\Courier\Meest\Service\MeestBusinessValidator:
        arguments:
            $logger: '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'meest' }

    App\Domain\Courier\Meest\Service\MeestShipmentService:
        arguments:
            $apiClient: '@App\Domain\Courier\Meest\Service\MeestApiClient'
            $repository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $entityManager: '@doctrine.orm.entity_manager'
            $validator: '@validator'
            $logger: '@monolog.logger'
            $trackingNumberGenerator: '@App\Domain\Courier\Meest\Service\MeestTrackingNumberGenerator'
            $labelService: '@App\Domain\Courier\Meest\Service\MeestLabelService'
            $businessValidator: '@App\Domain\Courier\Meest\Service\MeestBusinessValidator'
        tags:
            - { name: 'monolog.logger', channel: 'meest' }
            - { name: 'courier.service', alias: 'meest' }

    App\Controller\Api\MeestShipmentController:
        arguments:
            $shipmentService: '@App\Domain\Courier\Meest\Service\MeestShipmentService'
            $trackingService: '@App\Domain\Courier\Meest\Service\MeestTrackingService'
            $labelService: '@App\Domain\Courier\Meest\Service\MeestLabelService'
            $repository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $validator: '@validator'
            $logger: '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'meest' }
            - { name: 'controller.service_arguments' }

    # AI/ML Enhanced MEEST Services
    App\Domain\Courier\Meest\Service\MeestAITrackingService:
        arguments:
            $apiClient: '@App\Domain\Courier\Meest\Service\MeestApiClient'
            $trackingService: '@App\Domain\Courier\Meest\Service\MeestTrackingService'
            $statusMapper: '@App\Domain\Courier\Meest\Service\MeestStatusMapper'
            $shipmentRepository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $logger: '@monolog.logger'
            $cache: '@cache.app'
        tags:
            - { name: 'monolog.logger', channel: 'meest_ai' }

    App\Domain\Courier\Meest\Service\MeestMLPredictionService:
        arguments:
            $shipmentRepository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $logger: '@monolog.logger'
            $cache: '@cache.app'
        tags:
            - { name: 'monolog.logger', channel: 'meest_ml' }

    App\Domain\Courier\Meest\Service\MeestBackgroundUpdateService:
        arguments:
            $apiClient: '@App\Domain\Courier\Meest\Service\MeestApiClient'
            $aiTrackingService: '@App\Domain\Courier\Meest\Service\MeestAITrackingService'
            $mlPredictionService: '@App\Domain\Courier\Meest\Service\MeestMLPredictionService'
            $shipmentRepository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $messageBus: '@messenger.default_bus'
            $logger: '@monolog.logger'
            $cache: '@cache.app'
        tags:
            - { name: 'monolog.logger', channel: 'meest_background' }

    # MEEST AI Tracking Controller
    App\Controller\Api\MeestTrackingController:
        arguments:
            $aiTrackingService: '@App\Domain\Courier\Meest\Service\MeestAITrackingService'
            $apiClient: '@App\Domain\Courier\Meest\Service\MeestApiClient'
            $logger: '@monolog.logger'
        tags:
            - { name: 'monolog.logger', channel: 'meest_tracking_api' }
            - { name: 'controller.service_arguments' }

    # MEEST Webhook Service
    App\Domain\Courier\Meest\Service\MeestWebhookService:
        arguments:
            $shipmentRepository: '@App\Domain\Courier\Meest\Repository\MeestShipmentRepository'
            $aiTrackingService: '@App\Domain\Courier\Meest\Service\MeestAITrackingService'
            $httpClient: '@http_client'
            $messageBus: '@messenger.default_bus'
            $logger: '@monolog.logger'
            $webhookSecret: '%env(MEEST_WEBHOOK_SECRET)%'
        tags:
            - { name: 'monolog.logger', channel: 'meest_webhook' }

    # MEEST AI Commands
    App\Domain\Courier\Meest\Command\MeestAITrackingUpdateCommand:
        arguments:
            $backgroundUpdateService: '@App\Domain\Courier\Meest\Service\MeestBackgroundUpdateService'
            $mlPredictionService: '@App\Domain\Courier\Meest\Service\MeestMLPredictionService'
        tags:
            - { name: 'console.command' }